<title>{props.manga.title} - {Site.site_title}</title>
<description>{props.manga.description}</description>
<template>
  <div>
    <a href=":props.prev_page" class="nav-arrow">
      <icon:chevron-left width="40" height="40" />
    </a>
    <a href=":props.next_page" class="picture-link">
      <img src=":PageUrl(props.manga, props.page)" />
    </a>
    <a href=":props.next_page" class="nav-arrow">
      <icon:chevron-right width="40" height="40" />
    </a>
  </div>
</template>
<script area="server" method="get">
  const manga = await CollectionItem("manga-books", query.slug);
  const page = parseInt(query.page);

  return {
    manga: manga,
    page,
    next_page: page < manga.pages
      ? Combine('/publications', manga.slug, (page + 1).toString())
      : Combine('/publications', manga.slug),
    prev_page: page > 1
      ? Combine('/publications', manga.slug, (page - 1).toString())
      : Combine('/publications', manga.slug)
  };
</script>
<script area="server" method="post" body="ignore">
  const page = parseInt(query.page);
  await SavePage(query.slug, page, body);
  const manga = await CollectionItem("manga-books", query.slug);

  return {
    manga: manga,
    page,
    next_page: page < manga.pages
      ? Combine('/publications', manga.slug, (page + 1).toString())
      : Combine('/publications', manga.slug),
    prev_page: page > 1
      ? Combine('/publications', manga.slug, (page - 1).toString())
      : Combine('/publications', manga.slug)
  };
</script>
<style>
div {
  display: grid;
  height: 100%;
  grid-template-rows: 100%;
  grid-template-columns: 50px auto 50px;
}

.nav-arrow {
  display: flex;
  height: 100%;
  justify-content: center;
  align-items: center;
}

.picture-link {
  display: block;
  height: 100%;
}

img {
  display: block;
  height: 100%;
  width: auto;
  margin: 0 auto;
}
</style>