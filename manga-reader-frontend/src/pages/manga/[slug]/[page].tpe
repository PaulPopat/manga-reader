<title>{props.manga.title} - {props.site.site_title}</title>
<description>{props.manga.description}</description>
<template>
  <layout>
    <div style="display: grid; height: calc(100vh - 48px); grid-template-rows: 100%; grid-template-columns: 50px auto 50px;">
      <a href=":props.prev_page" class="flex h-100 justify-center items-center">
        <icon:chevron-left width="40" height="40" />
      </a>
      <a href=":props.next_page">
        <img class="h-full w-auto mx-auto" src=":context.PageUrl(props.manga, props.page)" />
      </a>
      <a href=":props.next_page" class="flex h-100 justify-center items-center">
        <icon:chevron-right width="40" height="40" />
      </a>
    </div>
  </layout>
</template>
<script area="server" method="get">
  const manga = await context.CollectionItem("manga-books", query.slug);
  const page = parseInt(query.page);

  return {
    manga: manga,
    metadata: await context.SingleItem("manga-description"),
    site: await context.SingleItem("site-metadata"),
    page,
    next_page: page < manga.pages
      ? context.Combine('/manga', manga.slug, (page + 1).toString())
      : context.Combine('/manga', manga.slug),
    prev_page: page > 1
      ? context.Combine('/manga', manga.slug, (page - 1).toString())
      : context.Combine('/manga', manga.slug)
  };
</script>