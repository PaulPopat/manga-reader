<template>
  <nav class=":Classes(`text-${props.colour || 'current'}`)">
    <for subject=":props.links" key="link">
      <a href=":link.href" class="inline-block px-2 py-3 hover:underline">{link.text}</a>
      <if check=":!link.last">/</if>
    </for>
  </nav>
</template>
<script area="server">
return {
  links: props.links.map((l, i) => ({ ...l, last: i === (props.links.length - 1) })),
  ...props
};
</script>
<style>
div {
  display: flex;
  align-items: center;
  margin-bottom: 1.5rem;
}

.text-current {
  color: currentColor;
}

.text-white {
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
}

.text-black {
  --tw-text-opacity: 1;
  color: rgba(17, 24, 39, var(--tw-text-opacity));
}

a {
  color: inherit;
  text-decoration: inherit;
  display: inline-block;
  padding: 0.75rem 0.5rem;
}

a:hover {
  text-decoration: underline;
}
</style>